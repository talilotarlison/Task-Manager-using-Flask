name: HdB

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
      - name: List directory structure
        run: ls -R
      - name: Run tests
        run: pytest $(find . -name dummy.py)

  bandit:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Perform Bandit Analysis
        uses: PyCQA/bandit-action@v1

  dependency_check:
    needs: build
    runs-on: ubuntu-latest
    name: Dependency-Check
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        id: Dependency-Check
        with:
          project: "Task-Manager-using-Flask"
          path: "."
          format: "HTML"
          out: "reports"
          args: >
            --scan "**/*.py"
            --scan "requirements.txt"
            --failOnCVSS 7
            --enableRetired
      - name: Upload Dependency-Check results
        uses: actions/upload-artifact@v3
        with:
          name: Dependency-Check report
          path: ${{github.workspace}}/reports

  zap_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: docker build -t flask-app .

      - name: Run Flask app in Docker
        run: |
          docker run -d -p 5000:5000 --name flask-container flask-app
          sleep 10

      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.10.0
        with:
          target: "http://localhost:5000"

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v2
        with:
          name: ZAP Report
          path: zap_report.html

      - name: Stop Docker container
        if: always()
        run: docker stop flask-container
